fieldset {
    background-color: #cceef9;
    padding: 0px 5px 5px 5px;
    border: 1px solid blue;
    border-radius: 8px;
}

/*
.lightborder {
    background-color: #cceef9;
    padding: 0px 5px 5px 5px;
    border-radius: 8px;
    border: 1px lightgray;
}
*/

legend {
    padding-left: 5px;
    padding-right: 5px;
    font-size: 14px;
    font-style: bold;
    width: auto;
}

/*  define styling for input boxes */
input {
    font-size: 15px;
    line-height: 20px;
    border-radius: 4px;
    border-color: blue;
    border-width: 1px;
    /*box-shadow: 4px 4px 2px lightgray;*/
    font-family: inherit;
}

input:focus {
    outline: none !important;
    border: 1px solid blue;
    box-shadow: 0 0 10px #c17ac8;
    /*background: lightblue;*/
}

.unit-input {
    width: 80px;
}

.title-input {
    width: 320px;
}

.contact-input {
    width: 230px;
}

.price-input {
    width: 100px;
}

.unit-dropdown {
    width: 100px;
}


/*  define styling for buttons */
.button {
    text-decoration: none;
    border: none;
    padding: 3px 10px 3px 10px; /* top right bottom left */
    font-size: 14px;
    background-color: #3997fa;
    color: #fff;
    height: 24px;
    border-radius: 5px;
    box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24);
    cursor: pointer;
    outline: none;
    transition: 0.2s all;
}

/* change the button's looks when it is pressed */
.button:active {
    border: none;
    text-decoration: none;
    outline: none;
    /* Scaling button to 0.98 to its original size */
    transform: scale(0.98);
    /* Lowering the shadow */
    box-shadow: 3px 2px 22px 1px #7e8893;
}

/* makes button's look remain the same as before pressing */
.button:focus {
    border: none;
    text-decoration: none;
    outline: none;
}

/* change the button's looks on mouse hovering it */
.button:hover {
    background-color: #2476d1;
    color: #ffffff;
    /*box-shadow: 0px 0px 4px 4px rgba(0, 0, 0, 0.44);*/
}

/* this is the button's looks when it is disabled */
button:disabled, button[disabled] {
    border: 1px solid #999999;
    background-color: #cccccc;
    color: #666666;
}

/* when the button is disabled, hovering it doesn't change from "disabled" */
.button[disabled]:hover {
    border: 1px solid #999999;
    background-color: #cccccc;
    color: #666666;
}

.larger-button.button {
    padding: 3px 10px 3px 10px; /* top right bottom left */
    height: 30px;
}

.small-button.button {
    font-size: 11px;
    padding: 2px 5px 2px 5px; /* top right bottom left */
    height: 20px;
    vertical-align: middle;
}

.selected-files {
    font: 16px Verdana, Arial, Helvetica, sans-serif;
    background: inherit;
    padding: 0px 0px 0px 0px; /* top, right, bottom, left */
    margin: 0px 0px 0px 0px;
}

.separator-spacer {
    margin-left: 12px;
}

.spacer {
    height: 10px;
}

.profile-block {
    padding-top: 12px;
    background: hsl(203, 39%, 94%);
    border-radius: 6px;
    font-size: 14px;
    font-weight: 300;
}

.message-block {
    z-index: 100;
    position: absolute;
    width: 520px;
    height: 90px;
    bottom: 350px;  /* this number of pixels from the bottom of the screen */
    left: 50%;  /* to center horizontally */
    transform: translate(-50%,-50%);
    padding: 30px 20px 30px 20px;
    border-radius: 6px;
    background: green;
    color: white;
    font-family: Verdana, sans-serif;
    font-size: 20px;
    font-weight: bold;
    text-align: center;
    display: block;
}

/*
  Now that I am creating the ERROR div dynamically, this might just work rather than using logic for fading
.error-message {
    animation: fadeOut 2s forwards;
    animation-delay: 5s;
    background: red;
    color: white;
    padding: 10px;
    text-align: center;
    display: none;
}

@keyframes fadeOut {
    from {opacity: 1;}
    to {opacity: 0;}
}
*/

